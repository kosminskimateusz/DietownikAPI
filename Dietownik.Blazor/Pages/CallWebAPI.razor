@page "/call-web-api"
@using System.Text.Json
@using System.Text.Json.Serialization;
@inject HttpClient Http
@inject IHttpClientFactory ClientFactory

<h1>Call web API from a Blazor Server Razor component</h1>
<h2>@message</h2>
@if (getBranchesError)
{
    <p>Unable to get Products.</p>
}
else
{
    <ul>
        @foreach (var branch in branches)
        {
            <li>@branch.Name</li>
        }
    </ul>
}

@code {
    private IEnumerable<Product> branches = Array.Empty<Product>();
    private bool getBranchesError;
    private bool shouldRender;
    public string message;

    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var request = new HttpRequestMessage(HttpMethod.Get, "https://localhost:44371/api/products");

            var client = ClientFactory.CreateClient();

            var response = await client.SendAsync(request);

            if (response.IsSuccessStatusCode)
            {
                using var responseStream = await response.Content.ReadAsStreamAsync();
                branches = await JsonSerializer.DeserializeAsync
                    <IEnumerable<Product>>(responseStream);
            }
            else
            {
                getBranchesError = true;
            }
        }
        catch (Exception ex)
        {
            message = ex.Message;
        }
        shouldRender = true;
    }

    public class Response
    {
        [JsonPropertyName("data")]
        public Data Data { get; set; }
    }
}